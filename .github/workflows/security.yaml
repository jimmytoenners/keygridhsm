name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  GO_VERSION: '1.23'

jobs:
  gosec:
    name: GoSec Static Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Download dependencies
      run: go mod download

    - name: Install GoSec
      run: go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest

    - name: Run GoSec Security Scanner
      run: |
        echo "Running GoSec security analysis..."
        gosec -no-fail -fmt sarif -out gosec-results.sarif ./...
        gosec -no-fail -fmt json -out gosec-results.json ./...
        gosec -no-fail -fmt text -out gosec-results.txt ./...

    - name: Upload GoSec SARIF results
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: gosec-results.sarif
        category: gosec

    - name: Upload GoSec artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: gosec-results
        path: |
          gosec-results.json
          gosec-results.txt

  govulncheck:
    name: Go Vulnerability Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Download dependencies
      run: go mod download

    - name: Install govulncheck
      run: go install golang.org/x/vuln/cmd/govulncheck@latest

    - name: Run Go Vulnerability Check
      run: |
        echo "Running Go vulnerability check..."
        govulncheck -json ./... > govulncheck-results.json || true
        govulncheck ./... > govulncheck-results.txt || true

    - name: Upload govulncheck artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: govulncheck-results
        path: |
          govulncheck-results.json
          govulncheck-results.txt

  nancy:
    name: Nancy Dependency Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Download dependencies
      run: go mod download

    - name: Install Nancy
      run: |
        curl -L -o nancy https://github.com/sonatypecommunity/nancy/releases/latest/download/nancy-v1.0.46-linux-amd64
        chmod +x nancy
        sudo mv nancy /usr/local/bin/

    - name: Generate Go modules list
      run: go list -json -deps ./... > go-deps.json

    - name: Run Nancy Dependency Scan
      run: |
        echo "Running Nancy dependency vulnerability scan..."
        nancy sleuth --output json --output-file nancy-results.json < go-deps.json || true
        nancy sleuth < go-deps.json > nancy-results.txt || true

    - name: Upload Nancy artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: nancy-results
        path: |
          nancy-results.json
          nancy-results.txt

  trivy:
    name: Trivy Container Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        load: true
        tags: keygrid-hsm:security-scan

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy

    - name: Run Trivy vulnerability scanner
      run: |
        echo "Running Trivy container vulnerability scan..."
        trivy image --format sarif --output trivy-results.sarif keygrid-hsm:security-scan
        trivy image --format json --output trivy-results.json keygrid-hsm:security-scan
        trivy image --format table --output trivy-results.txt keygrid-hsm:security-scan

    - name: Upload Trivy SARIF results
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: trivy-results.sarif
        category: trivy

    - name: Upload Trivy artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trivy-results
        path: |
          trivy-results.json
          trivy-results.txt

  security-report:
    name: Security Report Summary
    runs-on: ubuntu-latest
    needs: [gosec, govulncheck, nancy, trivy]
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all security artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: "*-results"
        merge-multiple: true

    - name: Generate Security Summary
      run: |
        echo "# Security Scan Summary" > security-summary.md
        echo "Generated on: $(date)" >> security-summary.md
        echo "" >> security-summary.md
        
        echo "## GoSec Static Analysis" >> security-summary.md
        if [ -f "gosec-results.txt" ]; then
          echo "GoSec scan completed. Results:" >> security-summary.md
          echo '```' >> security-summary.md
          tail -20 gosec-results.txt >> security-summary.md
          echo '```' >> security-summary.md
        else
          echo "GoSec scan failed or no results found." >> security-summary.md
        fi
        echo "" >> security-summary.md
        
        echo "## Go Vulnerability Check" >> security-summary.md
        if [ -f "govulncheck-results.txt" ]; then
          echo "Vulnerability check completed. Results:" >> security-summary.md
          echo '```' >> security-summary.md
          tail -20 govulncheck-results.txt >> security-summary.md
          echo '```' >> security-summary.md
        else
          echo "Vulnerability check failed or no results found." >> security-summary.md
        fi
        echo "" >> security-summary.md
        
        echo "## Nancy Dependency Scan" >> security-summary.md
        if [ -f "nancy-results.txt" ]; then
          echo "Nancy dependency scan completed. Results:" >> security-summary.md
          echo '```' >> security-summary.md
          tail -20 nancy-results.txt >> security-summary.md
          echo '```' >> security-summary.md
        else
          echo "Nancy scan failed or no results found." >> security-summary.md
        fi
        echo "" >> security-summary.md
        
        echo "## Trivy Container Scan" >> security-summary.md
        if [ -f "trivy-results.txt" ]; then
          echo "Trivy container scan completed. Results:" >> security-summary.md
          echo '```' >> security-summary.md
          tail -20 trivy-results.txt >> security-summary.md
          echo '```' >> security-summary.md
        else
          echo "Trivy scan failed or no results found." >> security-summary.md
        fi

    - name: Upload Security Summary
      uses: actions/upload-artifact@v4
      with:
        name: security-summary
        path: security-summary.md

    - name: Comment PR with Security Summary
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = './security-summary.md';
          
          if (fs.existsSync(path)) {
            const summary = fs.readFileSync(path, 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
          }